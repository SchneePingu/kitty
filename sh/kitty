#!/bin/bash

SCRIPTNAME=$(basename $0)
FINDTYPEOPTIONS=()
FINDTYPE=""
SEARCHCONTENT=false
DISPLAYINVIM=false
ARGUMENTS=()
NUMBEROFERRORS=0


setOption()
{
    option=$1

    case ${option} in
        c ) SEARCHCONTENT=true ;;
        d ) FINDTYPEOPTIONS+=("d") ;;
        f ) FINDTYPEOPTIONS+=("f") ;;
        v ) DISPLAYINVIM=true ;;
    esac
}

isValidOption()
{
    option=$1

    if [ "${option}" = "?" ]
    then
        return 1
    else
        return 0
    fi
}

parseCommandLineOptions()
{
    getoptsValidOptions=":cdfv"
    options=$@

    while getopts ${getoptsValidOptions} option ${options}
    do
        if ! isValidOption "${option}"
        then
            ((NUMBEROFERRORS++))
            echo "${SCRIPTNAME}: invalid option '${OPTARG}'" 1>&2
        else
            setOption "${option}"
        fi
    done

    FINDTYPE="-type "$(echo ${FINDTYPEOPTIONS[@]} | tr ' ' ',')
}


parseCommandLineArguments()
{
    while [ $# -gt 0 ]
    do
        parseCommandLineOptions $@

        shift $(($OPTIND - 1))
        unset OPTIND

        if [ $# -gt 0 ]
        then
            ARGUMENTS+=("$1")
            shift
        fi
    done

    return ${NUMBEROFERRORS}
}

validateArguments()
{
    if [ ${#ARGUMENTS[@]} -eq 0 ]
    then
        echo "${SCRIPTNAME}: Usage: ${SCRIPTNAME} [-v] [-c -d -f] NAME"
        return 1
    else
        return 0
    fi
}

displayResult()
{
    vimExecutable=$(which vim)
    if ${DISPLAYINVIM} && [ ! -z "${vimExecutable}" ]
    then
        closeVimIfNothingFound='exe !search(".")?"quit!":""'
        loadExplorerPlugin=':packadd kitty'
        ${vimExecutable} +"${closeVimIfNothingFound}" +"${loadExplorerPlugin}" - --not-a-term
    else
        cat
    fi
}

searchFileSystem()
{
    searchPattern="$1"

    if ${SEARCHCONTENT}
    then
        find . -not -path '*/\.*' -type f -exec grep -nHEs -C 1 ".*${searchPattern}.*" "{}" + | displayResult
    else
        find . -not -path '*/\.*' ${FINDTYPE} -name "*${searchPattern}*" | displayResult
    fi
}


parseCommandLineArguments $@
if [ $? -gt 0 ]
then
    exit 1
fi

validateArguments
if [ $? -gt 0 ]
then
    exit 1
fi

searchFileSystem "${ARGUMENTS[0]}"
